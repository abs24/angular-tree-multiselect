	angular.module('treeMultiSelect',[]).directive('ngTreeMultiselect',function($filter){
		return{
			restrict:'A',
			scope: {
				"treedata":"="
			},
			templateUrl:'/treeTemplate.html',
			link:function($scope,$elem,$attr)
			{
				$scope.hideDropdown =true;
				$scope.selected =[];
				$scope.seachText ="";
				$elem.append('<!--  this is generated by multiselect directive -->');
				$scope.showDropdown = function(){
					$scope.hideDropdown =false;
				}
				$scope.getArrowClass=function(flag)
				{
					if(flag)
					{
						return 'fa-caret-right';
					}
					else
					{
						return 'fa-caret-down'
					}
				}
				$scope.toggleHide = function(data)
				{
					data.hide=!data.hide;
				}
				$scope.hasChildren =function(data)
				{
					return (data.children != null && data.children.length>0);
				}
				$scope.initPattern = function(index,data,parent)
				{
					data.id = parent.id + '-' +index;
					data.parent = parent.id;
					data.selected = data.selected == null?false:data.selected;
					data.hideRow = false;
					$scope.flatData.push(data);
				}
				$scope.childSelect = function(data)
				{
					var index = data.id.replace('root-','').split('-');
					var parent = $scope.data.children;
					if(data.selected)
					{
						/* selecting all the parent */
						angular.forEach(index,function(value)
						{
							parent[value].selected = true;
							parent = parent[value].children;
						
						});
					}
					else
					{
						angular.forEach($scope.flatData,function(value)
						{
							if(value.id.indexOf(data.id) !=-1)
							{
								value.selected = false;
							}
						});
					}
					$scope.selected = [];
					$scope.flatSelected = [];
					angular.forEach($scope.flatData,function(value)
					{
						if(value.selected)
						{
							$scope.flatSelected.push(value);
						}
					});	
					$scope.selected = $scope.generateTree($scope.flatSelected);
					$scope.output = {children:$scope.selected};
				}
				$scope.generateTree = function(flat)
				{
					var lookup = {};
					var tree = [];
					angular.forEach(flat,function(value)
					{
						
						lookup[value.id] ={};
						angular.copy(value,lookup[value.id]);
						lookup[value.id].children = [];
					});
					angular.forEach(flat,function(value)
					{
						if(value.parent =='root')
						{
							tree.push(lookup[value.id]);
						}
						else
						{
							
							lookup[value.parent].children.push(lookup[value.id]);
						}
					});
					return tree;
				}
				$scope.showResult =function()
				{
					return $scope.selected.length == 0;
				}
				$scope.$watch('seachText',function(){
					
					var validEntries =[];
					angular.forEach($scope.flatData,function(value)
					{
						if(value.name.toLowerCase().indexOf($scope.seachText.toLowerCase()) !=-1)
						{
							validEntries.push(value);
						}
						else
						{
							value.hideRow = true;
						}
					});
					angular.forEach(validEntries,function(data)
					{
						var index = data.id.replace('root-','').split('-');
						var parent = $scope.data.children;
						angular.forEach(index,function(value)
						{
							parent[value].hideRow = false;
							parent = parent[value].children;
						
						});
					});
				
				});
				$scope.flatData=[];
				$scope.data ={};
				$scope.data.id = 'root';
				$scope.data.children = $scope.treedata;
			}
		}
	});